/* rules for mobile vertical (< 480) */
@media (max-width: 800px) {
  /* rules for mobile horizontal (480 > 768)  */
  .subsection {
    width: 100%;
    margin: 0;
  }
}

body {
  margin: 0;
  padding: 0;
  font-family: "Avenir Next", "Avenir", sans-serif;
}

#menuToggle {
  display: block;
  position: relative;
  width: 75px;
  top: 25px;
  left: 25px;

  z-index: 1;

  -webkit-user-select: none;
  user-select: none;
}

#menuToggle a {
  text-decoration: none;
  color: #232323;

  transition: color 0.3s ease;
}

#menuToggle a:hover {
  color: lightskyblue;
}

#menuToggle input {
  display: block;
  width: 40px;
  height: 32px;
  position: absolute;
  top: -7px;
  left: -5px;

  cursor: pointer;

  opacity: 0; /* hide this */
  z-index: 2; /* and place it over the hamburger */

  -webkit-touch-callout: none;
}

/*
  * Just a quick hamburger
  */
#menuToggle span {
  display: block;
  width: 33px;
  height: 4px;
  margin-bottom: 5px;
  position: relative;

  background: #cdcdcd;
  border-radius: 3px;

  z-index: 1;

  transform-origin: 4px 0px;

  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),
    background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1), opacity 0.55s ease;
}

#menuToggle span:first-child {
  transform-origin: 0% 0%;
}

#menuToggle span:nth-last-child(2) {
  transform-origin: 0% 100%;
}

/* 
  * Transform all the slices of hamburger
  * into a crossmark.
  */
#menuToggle input:checked ~ span {
  opacity: 1;
  transform: rotate(45deg) translate(-2px, -1px);
  background: #232323;
}

/*
  * But let's hide the middle one.
  */
#menuToggle input:checked ~ span:nth-last-child(3) {
  opacity: 0;
  transform: rotate(0deg) scale(0.2, 0.2);
}

/*
  * Ohyeah and the last one should go the other direction
  */
#menuToggle input:checked ~ span:nth-last-child(2) {
  transform: rotate(-45deg) translate(0, -1px);
}

/*
  * Make this absolute positioned
  * at the top left of the screen
  */
#menu {
  position: absolute;
  display: flex;
  flex-direction: column;

  align-items: flex-start;
  width: 300px;
  height: 100vh;
  margin: -100px 0 0 -50px;
  padding: 50px;
  padding-right: 30px;
  padding-top: 75px;
  background: #ededed;
  list-style-type: none;
  -webkit-font-smoothing: antialiased;
  /* to stop flickering of text in safari */

  transform-origin: 0% 0%;
  transform: translate(-100%, 0);

  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1);
}

#social-media-links {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}

#menu-pic {
  display: flex;
  flex-direction: column;
}

#menu li {
  padding: 10px 0;
  font-size: 16px;
}

#menuToggle input:checked ~ ul {
  transform: none;
}

.profile-pic {
  align-self: center;
  border-radius: 50%;
  width: 80%;
  height: auto;
  overflow: hidden;
}

.skills-container {
  display: flex;
  border: solid black 1px;
  border-radius: 25px;
  flex-direction: row;
  justify-content: space-evenly;
  align-items: center;
  align-self: center;
  height: 75px;
  min-width: 250px;
  padding: 15px;
}

.subsection-container {
  height: auto;
  max-width: 2500px;
  overflow: hidden;
  display: flex;
  justify-content: center;
  align-items: center;
}

.subsection {
  height: auto;
  width: 85%;
  border: 1px solid black;
  border-radius: 25px;
  padding: 2%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  margin-top: 2%;
}

.banner-container {
  height: 200px;
  width: 300px;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: space-evenly;
}

.banner-contents {
  font-size: 40px;
  color: #ededed;
}

.fa-container {
  display: flex;
  flex-direction: row;
}

.projects-list li {
  list-style-type: none;
}

.projects-list {
  padding-left: 0px;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  grid-gap: 0 10px;
}

.list-item p {
  margin-left: 10px;
}

.project-item-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: black solid 1px;
  border-radius: 25px;
  background-color: #ededed;
  margin-top: 15px;
  padding: 15px;
}

.project-image {
  height: auto;
  width: 250px;
}

.image-container {
  position: relative;
  width: 100%;
  max-width: 400px;
  margin: 15px;
}

.project-image {
  width: 100%;
  height: auto;
}

.overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  height: 100%;
  width: 100%;
  opacity: 0;
  transition: 0.3s ease;
  background-color: grey;
}

.image-container:hover .overlay {
  opacity: 0.5;
}

.icon {
  color: white;
  font-size: 50px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  text-align: center;
}

.fa-external-link:hover {
  color: #000;
  opacity: 1;
}

.fa-github:hover {
  color: lightskyblue;
}

.form-container {
  height: auto;
  width: 100%;
  border: black solid 1px;
  border-radius: 25px;
  padding: 15px;
}

form {
  margin: 2em 0;
}
/**
* Make the field a flex-container, reverse the order so label is on top.
*/

.field {
  display: flex;
  flex-flow: column-reverse;
  margin-bottom: 1em;
}
/**
* Add a transition to the label and input.
* I'm not even sure that touch-action: manipulation works on
* inputs, but hey, it's new and cool and could remove the 
* pesky delay.
*/
label,
input {
  transition: all 0.2s;
  touch-action: manipulation;
}

input {
  font-size: 1.5em;
  border: 0;
  border-bottom: 1px solid #ccc;
  font-family: inherit;
  -webkit-appearance: none;
  border-radius: 0;
  padding: 0;
  cursor: text;
}

input:focus {
  outline: 0;
  border-bottom: 1px solid #666;
}

label {
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
/**
* Translate down and scale the label up to cover the placeholder,
* when following an input (with placeholder-shown support).
* Also make sure the label is only on one row, at max 2/3rds of the
* fieldâ€”to make sure it scales properly and doesn't wrap.
*/
input:placeholder-shown + label {
  cursor: text;
  max-width: 66.66%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  transform-origin: left bottom;
  transform: translate(0, 2.125rem) scale(1.5);
}
/**
* By default, the placeholder should be transparent. Also, it should 
* inherit the transition.
*/
::-webkit-input-placeholder {
  opacity: 0;
  transition: inherit;
}
/**
* Show the placeholder when the input is focused.
*/
input:focus::-webkit-input-placeholder {
  opacity: 1;
}
/**
* When the element is focused, remove the label transform.
* Also, do this when the placeholder is _not_ shown, i.e. when 
* there's something in the input at all.
*/
input:not(:placeholder-shown) + label,
input:focus + label {
  transform: translate(0, 0) scale(1);
  cursor: pointer;
}

.form-button {
  background: white;
  border: black solid 1px;
  max-width: 200px;
  height: auto;
  border-radius: 25px;
}

.form-button:hover {
  background: black;
  color: white;
}

.hidden {
  display: none;
}
